swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  # Partie 2
  /transactions:
    get:
      security:
          - Bearer: []
      tags:
          - Transaction Module
      summary: Obtenir les transactions d'un utilisateur pour le mois en cours
      description: Retourne une liste de toutes les transactions d'un utilisateur, groupées par compte pour le mois en cours.
      parameters:
        - name: accountId
          in: query
          description: ID du compte pour lequel les transactions sont requises
          required: false
          type: string
      responses:
        200:
          description: Liste des transactions pour le mois en cours
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        400:
          description: Paramètre de requête invalide
        401:
          description: Non autorisé
        404:
          description: Aucune transaction trouvée pour l'ID de compte

  /transactions/{transactionId}:
    get:
      security:
          - Bearer: []
      tags:
          - Transaction Module
      summary: Détails d'une transaction spécifique
      description: Retourne les détails d'une transaction spécifique par son ID.
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
      responses:
        200:
          description: Détails de la transaction demandée
          schema:
            $ref: '#/definitions/TransactionDetail'
        400:
          description: Paramètre de requête invalide
        401:
          description: Non autorisé
        404:
          description: Transaction non trouvée
    put:
      security:
          - Bearer: []
      tags:
          - Transaction Module
      summary: Modifier une transaction
      description: Permet à l'utilisateur de modifier les détails d'une transaction existante.
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
        - in: body
          name: transaction
          description: Champs de la transaction à mettre à jour
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdate'
      responses:
        200:
          description: Transaction mise à jour avec succès
        400:
          description: Requête invalide
        401:
          description: Non autorisé
        404:
          description: Transaction non trouvée
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  # Partie 2
  Transaction:
    type: object
    properties:
      id:
        type: string
      date:
        type: string
        format: date
      description:
        type: string
      amount:
        type: number
      balance:
        type: number
  TransactionDetail:
    allOf:
      - $ref: '#/definitions/Transaction'
      - type: object
        properties:
          type:
            type: string
          category:
            type: string
          note:
            type: string
  TransactionUpdate:
    type: object
    properties:
      category:
        type: string
      note:
        type: string
